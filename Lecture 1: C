##
Review:
Functions: arguments, side effects, return values
Conditionals
Boolean expression
Loops 
Variables
##
Source code = code that you the human programmer write
Machine code = code that the computer knows
Compilers convert source code ---> machine code
- evaulate code by correctness, design, and style
##
Uh oh my work didn't save

## mario practice

EX: four question mark 
#include <stdio.h>

int main(void)
{
    for (int i = 0; i < 4; i++)
    {
        printf("?");
    }
    printf("\n");
}

EX 2: brick example
#include <stdio.h>

int main(void)
{
    for (int i = 0; i < 3; i++)
    {
        printf("#\n");
    }
}

EX 3: 3x3 grid of bricks
- nesting loopss with the variable "j" being nested in the for loop that uses "i"
- nested loop is the inner loop that forms the rows 

Code 
#include <stdio.h>
int main(void)
{
    for (int i = 0; i < 3; i++)
    {
        for (int j = 0; j < 3; j++)
        {
            printf("#");
        }
        printf("\n");
    }
}

EX 4: Ensuring brick is a square
const means constant, defensive coding in c, prevents you from changing a variable 

#include <stdio.h>

int main(void)
{
    const int n = 3;
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            printf("#");
        }
        printf("\n");
    }
}

EX 5: Customizing brick square grid 
#include <stdio.h>
#include <cs50.h>

int main(void)
{
    int n = get_int("Size: ");
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            printf("#");
        }
        printf("\n");
    }
}

Ex 6: Getting input from the user and making sure that said input meets certain requirements with a Do-While loop
#include <stdio.h>
#include <cs50.h>

int main(void)

{
    int n;
    do
    {
        n = get_int("Size: ");
    }
    while (n < 1);

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            printf("#");
        }
        printf("\n");
    }
}

Comment in c with "//"
- can be an approximation of pseudocode and can help you solve problems esp when you don't know where to begin
